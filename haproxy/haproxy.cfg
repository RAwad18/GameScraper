defaults
    mode http
    timeout client 10s
    timeout connect 5s
    timeout server 10s 

cache mycache
    total-max-size 4
    max-object-size 10000
    max-age 240

# Use caching
# Force insecure requests (HTTP) into being secure (routing from HTTP to HTTPS)
# Sliding Window Rate Limit - 20 requests per 10 seconds (useful against spam 'refreshing' the page)
# Enabled HTTP2, with a fallback to HTTP/1.1
frontend https-frontend
    bind *:80
    # Changed the actual directory to the certificate - it's probably a bad idea to actually expose it but who knows
    bind *:443 ssl crt /fake/directory/for/security/certificate.pem alpn h2,http/1.1
    http-request redirect scheme https unless { ssl_fc }
    filter cache mycache    #Not necessary since we only have 1 cache
    stick-table  type ipv6  size 1k  expire 30s  store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny deny_status 429 if { sc_http_req_rate(0) gt 20 }
    http-request cache-use mycache
    http-response cache-store mycache
    default_backend allservers

# Load balance using least connections algorithm
# Max of 100 connections per server
backend allservers
    balance leastconn
    timeout queue 7s
    server s1 webscraper-web-server-1:8080 check inter 5000 fall 5 rise 1  maxconn 100
    server s2 webscraper-web-server-2:8080 check inter 5000 fall 5 rise 1  maxconn 100
    server s3 webscraper-web-server-3:8080 check inter 5000 fall 5 rise 1  maxconn 100
    server s4 webscraper-web-server-4:8080 check inter 5000 fall 5 rise 1  maxconn 100
